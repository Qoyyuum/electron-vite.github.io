import{_ as e,o as n,c as d,S as t}from"./chunks/framework.31056c87.js";const v=JSON.parse('{"title":"dependencies vs devDependencies","description":"","frontmatter":{},"headers":[],"relativePath":"faq/dependencies.md","filePath":"faq/dependencies.md"}'),c={name:"faq/dependencies.md"},i=t('<h1 id="dependencies-vs-devdependencies" tabindex="-1"><a href="https://github.com/electron-vite/vite-plugin-electron-renderer#dependencies-vs-devdependencies" target="_blank" rel="noreferrer">dependencies vs devDependencies</a> <a class="header-anchor" href="#dependencies-vs-devdependencies" aria-label="Permalink to &quot;[dependencies vs devDependencies](https://github.com/electron-vite/vite-plugin-electron-renderer#dependencies-vs-devdependencies)&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This documentation is limited to building App using <a href="https://www.electron.build/" target="_blank" rel="noreferrer">electron-builder</a>.</p></div><p>If a third-party npm-pkg can be built normally by <a href="https://vitejs.dev/" target="_blank" rel="noreferrer">Vite</a>, we recommend placing it in <code>devDependencies</code>, which will reduce the size of the packaged App. In some extreme cases, such as when using <code>C/C++</code> addons, if we cannot build it correctly, we need to put it in <code>dependencies</code> to ensure that the App can work properly after being built.</p><details><summary>中文</summary><p>此文档仅限于使用 <code>electron-builder</code> 构建应用</p><p>如果一个第三方 npm 包可以被 <a target="_blank" href="https://vitejs.dev/">Vite</a> 正常构建，我们推荐将它放到 <code>devDependencies</code> 中，这会减小应用打包后的体积。</p><p>在一些极端的场景中，比如使用 <code>C/C++</code> 扩展时，如果我们没办法正确的构建它，需要将它放到 <code>dependencies</code> 中以确保应用构建后能够正常工作。</p></details>',4),s=[i];function r(a,o,p,l,h,_){return n(),d("div",null,s)}const m=e(c,[["render",r]]);export{v as __pageData,m as default};
