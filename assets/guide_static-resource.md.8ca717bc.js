import{_ as s,o as e,c as a,S as n}from"./chunks/framework.31056c87.js";const h=JSON.parse('{"title":"Packaging Static Resource Files","description":"","frontmatter":{},"headers":[],"relativePath":"guide/static-resource.md","filePath":"guide/static-resource.md"}'),t={name:"guide/static-resource.md"},o=n(`<h1 id="packaging-static-resource-files" tabindex="-1">Packaging Static Resource Files <a class="header-anchor" href="#packaging-static-resource-files" aria-label="Permalink to &quot;Packaging Static Resource Files&quot;">​</a></h1><h2 id="static-file-packaging-for-service-processes" tabindex="-1">Static file packaging for service processes <a class="header-anchor" href="#static-file-packaging-for-service-processes" aria-label="Permalink to &quot;Static file packaging for service processes&quot;">​</a></h2><h3 id="list-under-electron-builder-json5-s-file" tabindex="-1">List under <code>electron-builder.json5</code>&#39;s file <a class="header-anchor" href="#list-under-electron-builder-json5-s-file" aria-label="Permalink to &quot;List under \`electron-builder.json5\`&#39;s file&quot;">​</a></h3><p><a href="https://www.electron.build/configuration/contents.html#extrafiles" target="_blank" rel="noreferrer">extraFiles</a> Array&lt;String | FileSet&gt; | String | FileSet</p><p>The same as extraResources but copy into the app’s content directory (<code>Contents</code> for MacOS, root directory for Linux and Windows).</p><div class="language-jsonc line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">extraFiles</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">from</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dllFiles</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">to</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">filter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">*.dll</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="static-files-for-the-rendering-process" tabindex="-1">Static files for the rendering process <a class="header-anchor" href="#static-files-for-the-rendering-process" aria-label="Permalink to &quot;Static files for the rendering process&quot;">​</a></h2><h3 id="list-under-public-s-file" tabindex="-1">List under <code>public</code>&#39;s file <a class="header-anchor" href="#list-under-public-s-file" aria-label="Permalink to &quot;List under \`public\`&#39;s file&quot;">​</a></h3><p><a href="https://vitejs.dev/guide/assets.html#the-public-directory" target="_blank" rel="noreferrer">public</a> <code>&lt;root&gt;/public</code></p><p>For example, dynamically introduced <code>img/html/txt/js/ts/fonts</code> etc.</p><p>Directory to serve as plain static assets. Files in this directory are served at / during dev and copied to the root of outDir during build, and are always served or copied as-is without transform. The value can be either an absolute file system path or a path relative to project root.</p><p>Defining <a href="https://vitejs.dev/config/shared-options.html#publicdir" target="_blank" rel="noreferrer"><code>publicDir</code></a> as <code>false</code> disables this feature.</p>`,12),l=[o];function r(c,p,i,d,u,D){return e(),a("div",null,l)}const f=s(t,[["render",r]]);export{h as __pageData,f as default};
